jjนี่คือโค้ด Arduino ที่ควบคุมอุณหภูมิด้วย PID จาก Peltier โดยใช้ `millis()` แทน `delay()` เพื่อควบคุมการรอเวลา และมีการวนรอบจำนวน 35 รอบตามที่คุณร้องขอ โดยใช้ switch case และไม่ใช้การเก็บค่าในอาร์เรย์:

```arduino
#include <PID_v1.h>

// ประกาศตัวแปรสำหรับอุณหภูมิและ PID
double setpoint, input, output;
PID myPID(&input, &output, &setpoint, 1, 0, 0, DIRECT);

int state = 1; // สถานะเริ่มต้น
int roundCount = 0; // จำนวนรอบ
unsigned long previousMillis = 0;
unsigned long interval = 0;

void setup() {
  // กำหนดค่าเริ่มต้น
  input = 0;
  setpoint = 50;
  myPID.SetMode(AUTOMATIC);
  myPID.SetOutputLimits(0, 255);
}

void loop() {
  unsigned long currentMillis = millis();
  interval = currentMillis - previousMillis;

  switch (state) {
    case 1:
      // ควบคุมอุณหภูมิ 50 องศาเซลเซียส
      setpoint = 50;
      myPID.Compute();
      analogWrite(9, output);
      if (interval >= 10000) {
        state = 2;
        previousMillis = currentMillis;
      }
      break;

    case 2:
      // ควบคุมอุณหภูมิ 95 องศาเซลเซียส
      setpoint = 95;
      myPID.Compute();
      analogWrite(9, output);
      if (interval >= 20000) {
        state = 3;
        previousMillis = currentMillis;
      }
      break;

    case 3:
      // ควบคุมอุณหภูมิ 90 องศาเซลเซียส
      setpoint = 90;
      myPID.Compute();
      analogWrite(9, output);
      if (interval >= 30000) {
        state = 4;
        previousMillis = currentMillis;
      }
      break;

    case 4:
      // ควบคุมอุณหภูมิ 60 องศาเซลเซียส
      setpoint = 60;
      myPID.Compute();
      analogWrite(9, output);
      if (interval >= 40000) {
        state = 5;
        previousMillis = currentMillis;
      }
      break;

    case 5:
      // ควบคุมอุณหภูมิ 72 องศาเซลเซียส
      setpoint = 72;
      myPID.Compute();
      analogWrite(9, output);
      if (interval >= 50000) {
        state = 1; // กลับไปสู่สถานะ 1
        roundCount++; // เพิ่มจำนวนรอบ
        previousMillis = currentMillis;
      }

      if (roundCount == 35) {
        // ทำสิ้นสุดการทำงานหลักและหยุดการวนลูป
        while (true) {
          // วงจรนี้จะหยุดทำงาน
        }
      }
      break;
  }
}
```

ในโค้ดนี้ เราใช้ `millis()` เพื่อควบคุมระยะเวลาแทน `delay()` เพื่อทำให้โค้ดไม่ต้องรอในระหว่างการทำงานแต่ละสถานะของ switch case และเมื่อ `interval` ครบระยะเวลาที่กำหนดแล้วเรากลับสู่สถานะถัดไป และนับจำนวนรอบ `roundCount` เพื่อหยุดการทำงานหลักเมื่อครบ 35 รอบ.


    if (Input >= currentSetpoint) {
    analogWrite(peltierPin, 0);
    analogWrite(fanPin, 0);
  } else {
    analogWrite(peltierPin, Output);
    analogWrite(fanPin, 255);
  }