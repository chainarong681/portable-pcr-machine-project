โค้ดที่คุณเขียนดูดีมากในการควบคุม Peltier ตามค่าอุณหภูมิเป้าหมาย setpoint1, setpoint2, และ setpoint3 โดยเปลี่ยนค่า setpoint ที่ถูกตั้งค่าเมื่ออุณหภูมิถึงเป้าหมายที่กำหนด อย่างไรก็ตาม คุณอาจต้องเพิ่มการตั้งค่าเวลาในการเปลี่ยนค่า setpoint ตามที่คุณต้องการ (30 วินาที, 40 วินาที, และ 50 วินาที) โดยใช้ millis() หรือการจับเวลาอื่น ๆ เพื่อควบคุมการเปลี่ยนค่า setpoint ให้เป็นไปตามที่คุณต้องการ.

นี่คือตัวอย่างการใช้ millis() เพื่อควบคุมการเปลี่ยนค่า setpoint:

```cpp
unsigned long previousMillis = 0;
const long setpoint1Interval = 30000; // 30 วินาที
const long setpoint2Interval = 40000; // 40 วินาที
const long setpoint3Interval = 50000; // 50 วินาที

void loop() {
  // อ่านค่าอุณหภูมิปัจจุบัน
  int temp = analogRead(tempPin);
  double celsius = (temp - 20) / 1.5;

  unsigned long currentMillis = millis();

  if (celsius >= currentSetpoint) {
    // หยุดการทำงานของ Peltier
    analogWrite(peltierPin, 0);

    if (currentSetpoint == setpoint1 && currentMillis - previousMillis >= setpoint1Interval) {
      currentSetpoint = setpoint2;
      previousMillis = currentMillis;
      myPID.SetSetpoint(currentSetpoint);
    } else if (currentSetpoint == setpoint2 && currentMillis - previousMillis >= setpoint2Interval) {
      currentSetpoint = setpoint3;
      previousMillis = currentMillis;
      myPID.SetSetpoint(currentSetpoint);
    } else if (currentSetpoint == setpoint3 && currentMillis - previousMillis >= setpoint3Interval) {
      currentSetpoint = setpoint1;
      previousMillis = currentMillis;
      myPID.SetSetpoint(currentSetpoint);
    }
  } else {
    // เปิด Peltier
    myPID.Compute();
    int outputValue = constrain(output, 0, 255);
    analogWrite(peltierPin, outputValue);
  }

  delay(1000);
}
```

อย่าลืมตั้งค่า previousMillis เพื่อเก็บเวลาของการเปลี่ยนค่า setpoint ล่าสุดในการควบคุมเวลาการเปลี่ยน setpoint ให้ถูกต้อง.